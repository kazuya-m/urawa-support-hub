name: Deploy Cloud Scheduler

on:
  push:
    branches: [main]
    paths:
      - 'infrastructure/scheduler/**'
      - '.github/workflows/deploy-scheduler.yml'
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
  GC_REGION: ${{ secrets.GC_REGION }}
  SCHEDULER_SA_EMAIL: ${{ secrets.GC_SA_SCHEDULER }}

jobs:
  deploy-scheduler:
    name: Deploy Cloud Scheduler Job
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # Workload Identity連携に必要

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GC_SA_CICD }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Deploy Cloud Scheduler Job
        run: |
          # Use Cloud Run URL from GitHub Secrets
          SERVICE_URL="${{ secrets.CLOUD_RUN_URL }}"

          # Validate URL format and prerequisites
          if [ -z "$SERVICE_URL" ] || [ -z "${{ env.SCHEDULER_SA_EMAIL }}" ]; then
            echo "❌ Missing required environment variables"
            exit 1
          fi

          # Basic URL validation
          if [[ ! "$SERVICE_URL" =~ ^https:// ]]; then
            echo "❌ Invalid service URL format - must be HTTPS"
            exit 1
          fi

          # Load scheduler configurations from unified config file
          CONFIG_FILE="infrastructure/scheduler/config.yaml"

          # Daily scheduler config
          DAILY_SCHEDULE=$(yq '.jobs.daily-ticket-collection.schedule' $CONFIG_FILE)
          DAILY_ENDPOINT=$(yq '.jobs.daily-ticket-collection.endpoint' $CONFIG_FILE)
          DAILY_DEADLINE=$(yq '.jobs.daily-ticket-collection.attemptDeadline' $CONFIG_FILE | sed 's/s$//')

          # Monthly scheduler config
          MONTHLY_SCHEDULE=$(yq '.jobs.monthly-ticket-summary.schedule' $CONFIG_FILE)
          MONTHLY_ENDPOINT=$(yq '.jobs.monthly-ticket-summary.endpoint' $CONFIG_FILE)
          MONTHLY_DEADLINE=$(yq '.jobs.monthly-ticket-summary.attemptDeadline' $CONFIG_FILE | sed 's/s$//')

          # Common config
          TIMEZONE=$(yq '.common.timeZone' $CONFIG_FILE)

          # Deploy daily scheduler job
          if gcloud scheduler jobs describe "daily-ticket-collection" \
            --location="${{ env.GC_REGION }}" >/dev/null 2>&1; then
            gcloud scheduler jobs update http "daily-ticket-collection" \
              --location="${{ env.GC_REGION }}" \
              --schedule="$DAILY_SCHEDULE" \
              --time-zone="$TIMEZONE" \
              --uri="${SERVICE_URL}${DAILY_ENDPOINT}" \
              --http-method=POST \
              --update-headers="Content-Type=application/json" \
              --message-body='{"source":"cloud-scheduler"}' \
              --attempt-deadline="${DAILY_DEADLINE}s" \
              --max-retry-attempts=3 \
              --min-backoff=30s \
              --max-backoff=300s \
              --oidc-service-account-email="${{ env.SCHEDULER_SA_EMAIL }}"
          else
            gcloud scheduler jobs create http "daily-ticket-collection" \
              --location="${{ env.GC_REGION }}" \
              --schedule="$DAILY_SCHEDULE" \
              --time-zone="$TIMEZONE" \
              --uri="${SERVICE_URL}${DAILY_ENDPOINT}" \
              --http-method=POST \
              --headers="Content-Type=application/json" \
              --message-body='{"source":"cloud-scheduler"}' \
              --attempt-deadline="${DAILY_DEADLINE}s" \
              --max-retry-attempts=3 \
              --min-backoff=30s \
              --max-backoff=300s \
              --oidc-service-account-email="${{ env.SCHEDULER_SA_EMAIL }}" \
              --oidc-token-audience="${SERVICE_URL}"
          fi

          echo "✅ Daily ticket collection scheduler deployed"

          # Deploy monthly ticket summary scheduler job
          if gcloud scheduler jobs describe "monthly-ticket-summary" \
            --location="${{ env.GC_REGION }}" >/dev/null 2>&1; then
            gcloud scheduler jobs update http "monthly-ticket-summary" \
              --location="${{ env.GC_REGION }}" \
              --schedule="$MONTHLY_SCHEDULE" \
              --time-zone="$TIMEZONE" \
              --uri="${SERVICE_URL}${MONTHLY_ENDPOINT}" \
              --http-method=POST \
              --update-headers="Content-Type=application/json" \
              --message-body='{"source":"cloud-scheduler-monthly"}' \
              --attempt-deadline="${MONTHLY_DEADLINE}s" \
              --max-retry-attempts=3 \
              --min-backoff=10s \
              --max-backoff=60s \
              --oidc-service-account-email="${{ env.SCHEDULER_SA_EMAIL }}"
          else
            gcloud scheduler jobs create http "monthly-ticket-summary" \
              --location="${{ env.GC_REGION }}" \
              --schedule="$MONTHLY_SCHEDULE" \
              --time-zone="$TIMEZONE" \
              --uri="${SERVICE_URL}${MONTHLY_ENDPOINT}" \
              --http-method=POST \
              --headers="Content-Type=application/json" \
              --message-body='{"source":"cloud-scheduler-monthly"}' \
              --attempt-deadline="${MONTHLY_DEADLINE}s" \
              --max-retry-attempts=3 \
              --min-backoff=10s \
              --max-backoff=60s \
              --oidc-service-account-email="${{ env.SCHEDULER_SA_EMAIL }}" \
              --oidc-token-audience="${SERVICE_URL}"
          fi

          echo "✅ Monthly ticket summary scheduler deployed"
          echo "✅ All scheduler jobs deployment completed"
